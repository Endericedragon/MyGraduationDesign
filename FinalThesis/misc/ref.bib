%%
% The BIThesis Template for Bachelor Graduation Thesis
%
% 北京理工大学毕业设计（论文）参考文献管理 —— 使用 XeLaTeX 编译
%
% Copyright 2020-2023 BITNP
%
% This work may be distributed and/or modified under the
% conditions of the LaTeX Project Public License, either version 1.3
% of this license or (at your option) any later version.
% The latest version of this license is in
%   http://www.latex-project.org/lppl.txt
% and version 1.3 or later is part of all distributions of LaTeX
% version 2005/12/01 or later.
%
% This work has the LPPL maintenance status `maintained'.
%
% The Current Maintainer of this work is Feng Kaiyu.
%
% Compile with: xelatex -> biber -> xelatex -> xelatex

@inproceedings{bcInIoV,
  doi       = {10.1109/icite56321.2022.10101404},
  url       = {https://doi.org/10.1109%2Ficite56321.2022.10101404},
  year      = 2022,
  month     = 11,
  publisher = {{IEEE}
               },
  author    = {Nyothiri Aung and Tahar Kechadi and Tao Zhu and Saber Zerdoumi and Tahar Guerbouz and Sahraoui Dhelim},
  title     = {Blockchain Application on the Internet of Vehicles ({IoV})},
  booktitle = {2022 {IEEE} 7th International Conference on Intelligent Transportation Engineering ({ICITE})}
}

@online{gongAnBu,
  author       = {任沁沁},
  title        = {4.15亿辆、超5亿人！我国发布最新机动车和驾驶人数据},
  organization = {新华社},
  date         = {2022-12-08},
  url          = {http://www.gov.cn/xinwen/2022-12/08/content_5730661.htm},
  urldate      = {2023-04-24},
  keywords     = {online}
}

@online{nickSzabo,
  author   = {Nick Szabo},
  title    = {Smart Contracts: Building Blocks for Digital Markets},
  date     = {1996},
  url      = {https://www.fon.hum.uva.nl/rob/Courses/InformationInSpeech/CDROM/Literature/LOTwinterschool2006/szabo.best.vwh.net/smart_contracts_2.html},
  urldate  = {2023-04-24},
  keywords = {online}
}

@article{sensors,
  author  = {Chang Zhou and Huimei Lu and Yong Xiang and J Wu and F Wang},
  journal = {Sensors [Online]. Available: https://doi. org/10. 3390/s22228885},
  title   = {{Geohash-Based Rapid Query Method of Regional Transactions in Blockchain for Internet of Vehicles}},
  year    = {2022}
}

@online{ethereumWhitePaper,
  author      = {Vitalik Buterin},
  title       = {以太坊白皮书},
  year        = {2014},
  language    = {zh},
  keywords    = {online},
  urldate      = {2023-05-02},
  url = {https://ethereum.org/zh/whitepaper/}
}

@online{gethJS,
  author   = {The go-ethereum Authors},
  title    = {JavaScript Console},
  year     = {2023},
  language = {en},
  keywords = {online},
  urldate  = {2023-05-02},
  url      = {https://geth.ethereum.org/docs/interacting-with-geth/javascript-console}
}

@article{privateChainConsensus,
  title        = {基于私有区块链的共识算法性能分析},
  author       = {庄海燕},
  date         = {2020},
  journaltitle = {滨州学院学报},
  pages        = {63--68},
  issn         = {1673-2618},
  url          = {https://kns.cnki.net/kcms2/article/abstract?v=3uoqIhG8C44YLTlOAiTRKibYlV5Vjs7i8oRR1PAr7RxjuAJk4dHXokE42eVQSkXCeR2M6Ex8RJ2bicuBWxu2NYTldLmsdFJ7&uniplatform=NZKPT},
  urldate      = {2023-05-08},
  keywords     = {区块链, 私有链, 共识算法, 性能分析},
  langid       = {中文;},
  number       = {02}
}

@online{substrateHome,
  author   = {Parity Technologies},
  title    = {Home | Substrate},
  year     = {2023},
  language = {en},
  keywords = {online},
  urldate  = {2023-05-02},
  url      = {https://substrate.io/}
}

@online{substrateDoc,
  author   = {Parity Technologies},
  title    = {Substrate Documentation},
  year     = {2023},
  language = {en},
  keywords = {online},
  urldate  = {2023-05-02},
  url      = {https://docs.substrate.io/}
}

@inproceedings{parityVSgeth,
  author    = {Rouhani, Sara and Deters, Ralph},
  booktitle = {2017 8th IEEE International Conference on Software Engineering and Service Science (ICSESS)},
  title     = {Performance analysis of ethereum transactions in private blockchain},
  year      = {2017},
  volume    = {},
  number    = {},
  pages     = {70-74},
  doi       = {10.1109/ICSESS.2017.8342866}
}

@inproceedings{10.1145/3062341.3062363,
  author    = {Haas, Andreas and Rossberg, Andreas and Schuff, Derek L. and Titzer, Ben L. and Holman, Michael and Gohman, Dan and Wagner, Luke and Zakai, Alon and Bastien, JF},
  title     = {Bringing the Web up to Speed with WebAssembly},
  year      = {2017},
  isbn      = {9781450349888},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  url       = {https://doi.org/10.1145/3062341.3062363},
  doi       = {10.1145/3062341.3062363},
  abstract  = {The maturation of the Web platform has given rise to sophisticated and demanding Web applications such as interactive 3D visualization, audio and video software, and games. With that, efficiency and security of code on the Web has become more important than ever. Yet JavaScript as the only built-in language of the Web is not well-equipped to meet these requirements, especially as a compilation target. Engineers from the four major browser vendors have risen to the challenge and collaboratively designed a portable low-level bytecode called WebAssembly. It offers compact representation, efficient validation and compilation, and safe low to no-overhead execution. Rather than committing to a specific programming model, WebAssembly is an abstraction over modern hardware, making it language-, hardware-, and platform-independent, with use cases beyond just the Web. WebAssembly has been designed with a formal semantics from the start. We describe the motivation, design and formal semantics of WebAssembly and provide some preliminary experience with implementations.},
  booktitle = {Proceedings of the 38th ACM SIGPLAN Conference on Programming Language Design and Implementation},
  pages     = {185–200},
  numpages  = {16},
  keywords  = {assembly languages, just-in-time compilers, programming languages, virtual machines, type systems},
  location  = {Barcelona, Spain},
  series    = {PLDI 2017}
}

@article{wasmIntro,
  author     = {Haas, Andreas and Rossberg, Andreas and Schuff, Derek L. and Titzer, Ben L. and Holman, Michael and Gohman, Dan and Wagner, Luke and Zakai, Alon and Bastien, JF},
  title      = {Bringing the Web up to Speed with WebAssembly},
  year       = {2017},
  issue_date = {June 2017},
  publisher  = {Association for Computing Machinery},
  address    = {New York, NY, USA},
  volume     = {52},
  number     = {6},
  issn       = {0362-1340},
  url        = {https://doi.org/10.1145/3140587.3062363},
  doi        = {10.1145/3140587.3062363},
  abstract   = {The maturation of the Web platform has given rise to sophisticated and demanding Web applications such as interactive 3D visualization, audio and video software, and games. With that, efficiency and security of code on the Web has become more important than ever. Yet JavaScript as the only built-in language of the Web is not well-equipped to meet these requirements, especially as a compilation target. Engineers from the four major browser vendors have risen to the challenge and collaboratively designed a portable low-level bytecode called WebAssembly. It offers compact representation, efficient validation and compilation, and safe low to no-overhead execution. Rather than committing to a specific programming model, WebAssembly is an abstraction over modern hardware, making it language-, hardware-, and platform-independent, with use cases beyond just the Web. WebAssembly has been designed with a formal semantics from the start. We describe the motivation, design and formal semantics of WebAssembly and provide some preliminary experience with implementations.},
  journal    = {SIGPLAN Not.},
  month      = {jun},
  pages      = {185–200},
  numpages   = {16},
  keywords   = {programming languages, assembly languages, type systems, virtual machines, just-in-time compilers}
}



